@charset "utf-8";

// ============================================
// variable 
// ============================================
$maxWidth: 1440px;
$gridBgColor: #777777;
$gridBorderColor: #aaaaaa;

$episodeTableTempCol: 1fr 4fr 4fr 1.5fr 4fr;
$analysis1stTableTempCol: 1fr 1fr;
$analysis2ndTableTempCol: 1fr;
$summaryTableTempCol: 1fr;

$analysis2ndTableArrowWidth: 40px;

$chartWidth: $maxWidth;
$chartHeight: 420px;
$chartTextWidth: 71px;
$chartTextHeight: 370px;


// ============================================
// mixin 
// ============================================
/************************************************
    @breief:  クラス名・行数・幅を指定してgridテーブルを作成
    @param[1]:  テーブルのクラス名(xxxTableというクラスにスタイリング)
    @param[2]:  grid-template-columns
    @return: -
************************************************/
@mixin makeGridTable($tableName, $girdTempCol){
    .#{$tableName}Table {
        width: 100%;
        border: 1px solid $gridBorderColor;
    }
    
    .#{$tableName}Table__header {
        display: grid;
        grid-template-columns: $girdTempCol;
        color: white;
        font-weight: bold;
        background-color: $gridBgColor;
    }
    
    .#{$tableName}Table__row {
        display: grid;
        grid-template-columns: $girdTempCol;
    }
    
    .#{$tableName}Table__column {
        font-size: 1.4rem;
        padding: 5px 10px;
        border: 1px solid $gridBorderColor;
    }

    .#{$tableName}Table__input,
    .#{$tableName}Table__textarea {
        width: 100%;
        height: 100%;

        &::placeholder {
            color: lightgrey;
        }

        &:focus::placeholder {
            color: transparent;
        }
    }

    .#{$tableName}Table__input::-webkit-outer-spin-button,
    .#{$tableName}Table__input::-webkit-inner-spin-button {
        margin-left: 5px;
    }
}



// ============================================
// style
// ============================================
.main {
    display: block;
    margin: 0 auto;
    padding: auto 20px;
    max-width: $maxWidth;
}

.main__section {
    padding-top: 30px;
}

.main__sectionTtl {
    font-size: 2.4rem;
    font-weight: bold;
    padding: 20px 20px 20px 0px;
}

.main__sectionSubTtl {
    font-size: 1.8rem;
    font-weight: bold;
    padding: 10px 20px 10px 0px;
}


// episode ============================================
@include makeGridTable("episode", $episodeTableTempCol);

.-numItemAge,
.-numItemMotivation {
    position: relative;
    text-align: right;
    font-weight: bold;
    padding-right: 25px;
    padding-left: 0;

    &::after {
        position: absolute;
        content: ""; // 数値の単位は以下で個別に更新
        top: 50%;
        right: 10px;
        transform: translate(0, -50%);
        font-size: 1.2rem;
        font-weight: normal;
    }
}

// 数値の単位を個別に更新
.-numItemAge::after {
    content: "歳";
}
.-numItemMotivation::after {
    content: "点";
}



// chronology ============================================
.chronology {
    width: $chartWidth;
}

.chronology__chart {
    position: relative;
    width: 100%;
    height: $chartHeight;
}

.chronologyEpisodeList {
    display: flex;
}

.chronology__episode {
    position: relative;
    // jsで設定しているcanvas内merginと同じ値になるように計算すること！
    // canvas_mergin_x + axis_mergin_x
    padding-left: 50px;
    margin-top: 10px; 

    &::before {
        position: absolute;
        display: flex;
        justify-content: center;
        align-items: center;
        background-color: #222222;
        content: "エピソード";
        color: #ffffff;
        font-size: 1.4rem;
        font-weight: bold;
        width: 3.5rem;
        height: 100%;
        top: 0;
        left: 10px;

        // 縦書き設定
        writing-mode: vertical-rl;
        text-orientation: upright;
    }
}

.chronologyEpisodeList__item {
    display: flex;
    flex-direction: column;
    align-items: center;
    width: $chartTextWidth;
    max-width: $chartTextWidth;
    margin-top: 5px;
}

.chronologyEpisodeList__itemAge {
    position: relative;
    height: 35px;
    font-size: 1.4rem;
    font-weight: bold;
    padding-bottom: 15px;

    &::after {
        position: absolute;
        content: "歳";
        bottom: 0;
        left: 50%;
        transform: translate(-50%, 0);
        font-size: 1.2rem;
        font-weight: normal;
    }
}

.chronologyEpisodeList__itemText {
    display: flex;
    align-items: center;
    font-size: 1.2rem;
    width: 100%;
    height: $chartTextHeight;
    padding: 10px;

    // はみ出した文字は表示しない
    overflow: hidden;
    text-overflow: ellipsis;

    // 縦書き設定
    writing-mode: vertical-rl;
    text-orientation: upright;
    line-height: 1;
    // 改行文字で改行できるようにする
    white-space: pre-wrap;
}


// analysis ============================================
@include makeGridTable("analysis1st", $analysis1stTableTempCol);
@include makeGridTable("analysis2nd", $analysis2ndTableTempCol);

.analysisQuestionList {
    display: grid;
    grid-template-columns: 4fr 1fr 2fr;

    &:not(:first-of-type) {
        padding-top: 30px;
    }
}

.analysisQuestionList__item:nth-of-type(1) {
    grid-column: 1 / 2;
}

.analysisQuestionList__item:nth-of-type(2) {
    grid-column: 3 / 4;
}

.analysis2ndTable {
    position: relative;

    // 三角矢印
    &::before {
        position: absolute;
        content: "";
        border: $analysis2ndTableArrowWidth solid;
        border-color: transparent transparent transparent #dddddd;
        transform: translate(-50%, 50%) ;
        bottom: 50%;
        left: calc(-25% + (0.5*$analysis2ndTableArrowWidth));
    }
}

// summary ============================================
@include makeGridTable("summary", $summaryTableTempCol);


// utility ============================================
.-mergeCellTop {
    border-bottom: none;
}

.-mergeCellMiddle {
    border-top: none;
    border-bottom: none;
}

.-mergeCellBottom {
    border-top: none;
}


